[1mdiff --git a/SpaceQbit_Unity/Assets/Scripts/Shooting.cs b/SpaceQbit_Unity/Assets/Scripts/Shooting.cs[m
[1mindex 644b7f6..d16bcf2 100644[m
[1m--- a/SpaceQbit_Unity/Assets/Scripts/Shooting.cs[m
[1m+++ b/SpaceQbit_Unity/Assets/Scripts/Shooting.cs[m
[36m@@ -2,52 +2,53 @@[m
 using System.Collections;[m
 using System.Collections.Generic;[m
 using System.Linq;[m
[32m+[m[32musing UnityEditor;[m
 using UnityEngine;[m
 [m
 public class Shooting : MonoBehaviour[m
 {[m
[31m-    public GameObject obj;[m
[31m-    public Camera mainCam;[m
[31m-    private Transform posCanvas;[m
[31m-    private List<GameObject> Balls;[m
[31m-    private List<float> timeBalls;[m
[32m+[m[32m    public GameObject Obj;[m
[32m+[m[32m    public Camera cam;[m
     [m
[31m-    private float lastTimeShoot;[m
[31m-    private bool Shootable = true;[m
[31m-    private float CooldownShoot;[m
     [m
     [m
     [m
[32m+[m[32m    private Transform _posCanvas;[m
[32m+[m[32m    private List<GameObject> _bullets;[m
[32m+[m[32m    private List<float> _timeBullets;[m
     [m
[31m-    public float getLastTimeShoot()[m
[32m+[m[32m    private float _lastTimeShoot;[m
[32m+[m[32m    private bool _shootable = true;[m
[32m+[m[32m    private float _cooldownShoot;[m
[32m+[m
[32m+[m[32m    private float _durationBullet;[m
[32m+[m[41m    [m
[32m+[m[41m    [m
[32m+[m[32m    public float GetLastTimeShoot()[m
     {[m
[31m-        return lastTimeShoot;[m
[32m+[m[32m        return _lastTimeShoot;[m
     }[m
 [m
[31m-    public float getCooldownShoot()[m
[32m+[m[32m    public float GetCooldownShoot()[m
     {[m
[31m-        return CooldownShoot;[m
[32m+[m[32m        return _cooldownShoot;[m
     }[m
 [m
[31m-    public bool getShootable()[m
[32m+[m[32m    public bool GetShootable()[m
     {[m
[31m-        return Shootable;[m
[32m+[m[32m        return _shootable;[m
     }[m
 [m
[31m-    [m
[31m-    [m
[31m-    [m
[31m-    [m
[31m-    [m
[31m-    [m
[32m+[m
     [m
     // Start is called before the first frame update[m
     void Start()[m
     {[m
[31m-        lastTimeShoot = -2;[m
[31m-        Balls = new List<GameObject>();[m
[31m-        timeBalls = new List<float>();[m
[31m-        CooldownShoot = 0.5f;[m
[32m+[m[32m        _durationBullet = 10;[m
[32m+[m[32m        _lastTimeShoot = -2;[m
[32m+[m[32m        _bullets = new List<GameObject>();[m
[32m+[m[32m        _timeBullets = new List<float>();[m
[32m+[m[32m        _cooldownShoot = 0.5f;[m
     }[m
 [m
     float sign(float x)[m
[36m@@ -58,12 +59,45 @@[m [mpublic class Shooting : MonoBehaviour[m
 [m
     float GetCooToAngle()[m
     {[m
[31m-        Vector3 posMouse = Input.mousePosition;[m
[31m-        posMouse.x -= 961;[m
[31m-        posMouse.y -= 419;[m
[31m-[m
[31m-        double a = Math.Atan2(posMouse.y, posMouse.x) * 180 / Math.PI;[m
[31m-        Debug.Log(a);[m
[32m+[m[32m//        Ray ray = cam.ScreenPointToRay(Input.mousePosition);[m
[32m+[m[32m//[m[41m        [m
[32m+[m[32m//        Vector3 newOne = new Vector3(ray.direction.x, 0, ray.direction.y - 0.7f);[m
[32m+[m[32m//[m[41m        [m
[32m+[m[32m//        Debug.Log(newOne);[m
[32m+[m[32m//        float x = (float) (Math.Atan2(newOne.z,[m[41m [m
[32m+[m[32m//                               newOne.x) * 180 / Math.PI);[m
[32m+[m[32m//        float angle = (float) ((x - 90) / 360 * Math.PI);[m
[32m+[m[32m//[m[41m        [m
[32m+[m[32m//        Vector3 pos = new Vector3((float) (Math.Cos(angle) - Math.Sin(angle)),[m
[32m+[m[32m//            (float) (-Math.Sin(angle) + Math.Cos(angle)),[m
[32m+[m[32m//            angle);[m
[32m+[m[32m//        return pos * 360;[m
[32m+[m[32m//[m
[32m+[m[32m//[m
[32m+[m[32m//        Vector3 a = ray.direction;[m
[32m+[m[32m//        a.y = 0;[m
[32m+[m[32m//        a.z -= 0.3f;[m
[32m+[m[32m//        Vector3 c = new Vector3(-1 * a.z, 0, a.x);[m
[32m+[m[32m//        return c * 360;[m
[32m+[m[32m//[m
[32m+[m[32m//        double x = Math.Atan2(a.z, a.x) * 180 / Math.PI - 90;[m
[32m+[m[32m//        Debug.Log(x);[m
[32m+[m[32m//        Vector3 b;[m
[32m+[m[32m//[m
[32m+[m[32m//        double PIOver4 = -Math.PI / 4;[m
[32m+[m[32m//[m[41m        [m
[32m+[m[32m//        b.x = 45;[m
[32m+[m[32m//        b.y = (float) (Math.Cos(PIOver4) * a.z - Math.Sin(PIOver4) * a.y);[m
[32m+[m[32m//        b.z = (float) (-Math.Sin(PIOver4) * a.z + Math.Cos(PIOver4) * a.y);[m
[32m+[m[32m//[m[41m        [m
[32m+[m[32m//        return b * 360;[m
[32m+[m[32m//----------------------------------------------------------------------[m
[32m+[m[41m        [m
[32m+[m[41m        [m
[32m+[m[32m        posMouse.y = 0;[m
[32m+[m[41m        [m
[32m+[m[32m        double a = Math.Atan2(posMouse.z, posMouse.x) * 180 / Math.PI;[m
[32m+[m[32m        Debug.Log((a - 90));[m
 [m
         return (float) (a - 90);[m
     }[m
[36m@@ -71,32 +105,53 @@[m [mpublic class Shooting : MonoBehaviour[m
     // Update is called once per frame[m
     void Update()[m
     {[m
[31m-        if ((lastTimeShoot + CooldownShoot < Time.time) &&[m
[31m-            (!Shootable))[m
[32m+[m[32m        if ((_lastTimeShoot + _cooldownShoot < Time.time) &&[m
[32m+[m[32m            (!_shootable))[m
         {[m
[31m-            Shootable = true;[m
[32m+[m[32m            _shootable = true;[m
         }[m
 [m
[31m-        if (Input.GetMouseButton(0) && Shootable)[m
[32m+[m[32m        if (Input.GetMouseButton(0) && _shootable)[m
         {[m
[31m-            posCanvas = GetComponentInParent<Transform>();[m
[32m+[m[32m            _posCanvas = GetComponentInParent<Transform>();[m
[32m+[m
[32m+[m[32m            GameObject newOne = Instantiate(Obj);[m
[32m+[m[41m            [m
[32m+[m[32m            newOne.transform.localPosition = _posCanvas.position;[m
 [m
[31m-            GameObject newOne = Instantiate(obj);[m
[32m+[m[32m            float angle = GetCooToAngle();[m
             [m
[31m-            newOne.transform.localPosition = posCanvas.position;[m
[31m-            newOne.transform.Rotate(0, 0, GetCooToAngle());[m
[32m+[m[32m            newOne.transform.Rotate((float) (Math.Cos(angle) - Math.Sin(angle)) ,[m[41m [m
[32m+[m[32m                                    (float) (-Math.Sin(angle) + Math.Cos(angle)),[m[41m [m
[32m+[m[32m                                    angle);[m
[32m+[m[32m//            newOne.transform.Rotate(GetCooToAngle());[m
             [m
[31m-            Balls.Add(newOne);[m
[31m-            timeBalls.Add(Time.time);[m
[32m+[m[32m//            newOne.AddComponent<Rigidbody>();[m
[32m+[m[32m//            Rigidbody rb = newOne.GetComponent<Rigidbody>();[m
[32m+[m[32m//[m[41m            [m
[32m+[m[32m//            rb.velocity = new Vector3((float) -Math.Acos(angle / 360 * Math.PI),[m[41m [m
[32m+[m[32m//                                        0 ,[m[41m [m
[32m+[m[32m//                                        (float) Math.Asin(angle / 360 * Math.PI));[m
[32m+[m[32m//[m[41m            [m
[32m+[m[32m            //rb.useGravity = false;[m
[32m+[m[41m            [m
[32m+[m[32m            _bullets.Add(newOne);[m
[32m+[m[32m            _timeBullets.Add(Time.time);[m
[32m+[m
[32m+[m[32m            _shootable = false;[m
[32m+[m[32m            _lastTimeShoot = Time.time;[m
[32m+[m[32m        }[m
 [m
[31m-            Shootable = false;[m
[31m-            lastTimeShoot = Time.time;[m
[32m+[m[32m        if (_timeBullets.Count > 0 && (_timeBullets[0] + _durationBullet < Time.time))[m
[32m+[m[32m        {[m
[32m+[m[32m            Destroy(_bullets[0]);[m
[32m+[m[32m            _timeBullets.RemoveAt(0);[m
[32m+[m[32m            _bullets.RemoveAt(0);[m
         }[m
 [m
[31m-        if (timeBalls[0] + 10 < Time.time)[m
[32m+[m[32m        foreach (var q in _bullets)[m
         {[m
[31m-            timeBalls.RemoveAt(0);[m
[31m-            Balls.RemoveAt(0);[m
[32m+[m[32m            //q.rigidbody.[m
         }[m
     }[m
 }[m
